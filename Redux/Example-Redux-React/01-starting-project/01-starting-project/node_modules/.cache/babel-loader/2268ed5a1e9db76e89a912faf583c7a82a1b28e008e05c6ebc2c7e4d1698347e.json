{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n// *** Using just redux ***\n// const countReducer = (state = initialState, action) =>{\n//    if(action.type ==='increment'){\n//       return {\n//         counter : state.counter + 1,\n//         showCounter: state.showCounter\n//       };\n//    }\n\n//    if(action.type ==='increase'){\n//     return {\n//       counter : state.counter + action.amount,\n//       showCounter: state.showCounter\n\n//     }\n//  }\n\n//    if(action.type ==='decrement'){\n//       return {\n//           counter : state.counter - 1,\n//           showCounter: state.showCounter\n\n//       }\n//    }\n//    if(action.type ==='toggle'){\n//     return{\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n\n//     }\n//    }\n//    return state;\n\n// };\n\n// const store = createStore(countReducer);\n\n// export default store;","map":{"version":3,"names":["createSlice","configureStore","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"sources":["/home/fer/develop/learningReact/Redux/Example-Redux-React/01-starting-project/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore} from '@reduxjs/toolkit'\n\n\nconst initialAuthState = {\n  isAuthenticated : false\n};\nconst authSlice = createSlice({\n  name:'authentication',\n  initialState:initialAuthState,\n  reducers: {\n    login(state){\n      state.isAuthenticated = true;\n    },\n    logout(state){\n      state.isAuthenticated = false;\n    }\n  }\n});\n\nconst store = configureStore({\n  reducer: {counter:counterSlice.reducer, auth:authSlice.reducer}\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n// *** Using just redux ***\n// const countReducer = (state = initialState, action) =>{\n//    if(action.type ==='increment'){\n//       return {\n//         counter : state.counter + 1,\n//         showCounter: state.showCounter\n//       };\n//    }\n\n//    if(action.type ==='increase'){\n//     return {\n//       counter : state.counter + action.amount,\n//       showCounter: state.showCounter\n\n//     }\n//  }\n\n//    if(action.type ==='decrement'){\n//       return {\n//           counter : state.counter - 1,\n//           showCounter: state.showCounter\n\n//       }\n//    }\n//    if(action.type ==='toggle'){\n//     return{\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n\n//     }\n//    }\n//    return state;\n\n// };\n\n// const store = createStore(countReducer);\n\n// export default store;\n\n\n\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAG7D,MAAMC,gBAAgB,GAAG;EACvBC,eAAe,EAAG;AACpB,CAAC;AACD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAC,gBAAgB;EACrBC,YAAY,EAACJ,gBAAgB;EAC7BK,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAC;MACVA,KAAK,CAACN,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDO,MAAMA,CAACD,KAAK,EAAC;MACXA,KAAK,CAACN,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EAC3BW,OAAO,EAAE;IAACC,OAAO,EAACC,YAAY,CAACF,OAAO;IAAEG,IAAI,EAACX,SAAS,CAACQ;EAAO;AAChE,CAAC,CAAC;AAEF,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGd,SAAS,CAACa,OAAO;AAC5C,eAAeN,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}