{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;\n// *** Using just redux ***\n// const countReducer = (state = initialState, action) =>{\n//    if(action.type ==='increment'){\n//       return {\n//         counter : state.counter + 1,\n//         showCounter: state.showCounter\n//       };\n//    }\n\n//    if(action.type ==='increase'){\n//     return {\n//       counter : state.counter + action.amount,\n//       showCounter: state.showCounter\n\n//     }\n//  }\n\n//    if(action.type ==='decrement'){\n//       return {\n//           counter : state.counter - 1,\n//           showCounter: state.showCounter\n\n//       }\n//    }\n//    if(action.type ==='toggle'){\n//     return{\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n\n//     }\n//    }\n//    return state;\n\n// };\n\n// const store = createStore(countReducer);\n\n// export default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["/home/fer/develop/learningReact/Redux/Example-Redux-React/01-starting-project/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore} from '@reduxjs/toolkit'\n\n\nconst initialState = {counter:0, showCounter :true};\n\nconst counterSlice = createSlice({\n  name:'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter ++;\n    },\n    decrement (state) {\n      state.counter --;\n    },\n    increase (state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  }\n});\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.actions;\nexport default store;\n// *** Using just redux ***\n// const countReducer = (state = initialState, action) =>{\n//    if(action.type ==='increment'){\n//       return {\n//         counter : state.counter + 1,\n//         showCounter: state.showCounter\n//       };\n//    }\n\n//    if(action.type ==='increase'){\n//     return {\n//       counter : state.counter + action.amount,\n//       showCounter: state.showCounter\n\n//     }\n//  }\n\n//    if(action.type ==='decrement'){\n//       return {\n//           counter : state.counter - 1,\n//           showCounter: state.showCounter\n\n//       }\n//    }\n//    if(action.type ==='toggle'){\n//     return{\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n\n//     }\n//    }\n//    return state;\n\n// };\n\n// const store = createStore(countReducer);\n\n// export default store;\n\n\n\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAG7D,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAC,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAEnD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAC,SAAS;EACdJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAG;IAClB,CAAC;IACDO,SAASA,CAAED,KAAK,EAAE;MAChBA,KAAK,CAACN,OAAO,EAAG;IAClB,CAAC;IACDQ,QAAQA,CAAEF,KAAK,EAAEG,MAAM,EAAE;MACvBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAEX,YAAY,CAACW;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;AAClD,eAAeH,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}